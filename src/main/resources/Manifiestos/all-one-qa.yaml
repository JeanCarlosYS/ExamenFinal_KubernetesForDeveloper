apiVersion: v1
kind: Secret
metadata:
  name: mysql-user-secret-jc
type: Opaque
data:
  rootUsername: cm9vdA==
  rootPassword: MTIzNDU2
  
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: cloud-data-configmap
data:
  kubernetes_name_service_1: "EKS"
  cloud_name_1: "Amazon Web Services"
  kubernetes_name_service_2: "AKS"
  cloud_name_2: "Azure"
  kubernetes_name_service_3: "GKS"
  cloud_name_3: "Google"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-mysql-deployment
  namespace: prod
  labels:
    app: srv-db-mysql
spec:
  selector:
    matchLabels:
      name: db-mysql
      app: srv-db-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      name: srv-db-mysql
      labels:
        name: db-mysql
        app: srv-db-mysql
    spec:
      containers:
      - image: mysql:9.1.0
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-user-secret-jc
              key: rootPassword
        ports:
        - containerPort: 3306     
          name: mysql
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 100m
        volumeMounts:
        - mountPath: /var/lib/mysql2
          name: kb2volume
      volumes:
      - name: kb2volume
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: db-mysql-service
  namespace: prod
  labels:
    name: db-mysql
    app: srv-db-mysql
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    name: db-mysql
    app: srv-db-mysql
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gestion-paises-deployment
  namespace: prod
  labels:
    app: api-gestion-paises
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gestion-paises
  template:
    metadata:
      labels:
        app: api-gestion-paises
    spec:
      containers:
      - name: api-gestion-paises
        image: anovoa1975/api-gestion-paises:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 8081
        resources:
          limits:
            cpu: 1
            memory: 512Mi
          requests:
            cpu: 100m
        env:
        - name: MYSQL_HOST
          value: db-mysql-service
        - name: MYSQL_PORT
          value: '3306'
        - name: MYSQL_DB
          value: CURS_000263_Docker
        - name: MYSQL_USER
#          value: root
          valueFrom:
            secretKeyRef:
              name: mysql-user-secret-jc
              key: rootUsername
        - name: MYSQL_PASSWORD
#          value: '123456'
          valueFrom:
            secretKeyRef:
              name: mysql-user-secret-jc
              key: rootPassword
        - name: CLOUD_AMAZON
          valueFrom:
            configMapKeyRef:
              name: cloud-data-configmap
              key: cloud_name_1
        - name: CLOUD_AZURE
          valueFrom:
            configMapKeyRef:
              name: cloud-data-configmap
              key: cloud_name_2

---

apiVersion: v1
kind: Service
metadata:                     
  name: api-gestion-paises-service
  labels:                   
    app: api-gestion-paises
spec:                         
  type: NodePort 
  selector:
    app: api-gestion-paises
  ports:
  - name: http
    port: 8083
    targetPort: 8083
